//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class JSON2Apex {

   /* public class Estimate {
        public String type_Z {get;set;} // in json: type
        public Integer total {get;set;} 

        public Estimate(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'type') {
                            type_Z = parser.getText();
                        } else if (text == 'total') {
                            total = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Estimate consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Task {
        public List<String> projects {get;set;} 
        public Estimate estimate {get;set;} 
        public Time time {get;set;} 
        public String id {get;set;} 
        public String type_Z {get;set;} // in json: type
        public String name {get;set;} 
        public String url {get;set;} 
        public String status {get;set;} 
        public List<Labels> labels {get;set;} 
        public String createdAt {get;set;} 
        public String dueAt {get;set;} 

        public Task(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'projects') {
                            projects = arrayOfString(parser);
                        } else if (text == 'estimate') {
                            estimate = new Estimate(parser);
                        } else if (text == 'time') {
                            time = new Time(parser);
                        } else if (text == 'id') {
                            id = parser.getText();
                        } else if (text == 'type') {
                            type_Z = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'url') {
                            url = parser.getText();
                        } else if (text == 'status') {
                            status = parser.getText();
                        } else if (text == 'labels') {
                            labels = arrayOfLabels(parser);
                        } else if (text == 'createdAt') {
                            createdAt = parser.getText();
                        } else if (text == 'dueAt') {
                            dueAt = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Task consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public Integer user {get;set;} 
    public Integer id {get;set;} 
    public String date {get;set;} 
    public Integer time {get;set;} 
    public Task task {get;set;} 
    public List<History> history {get;set;} 
    public Boolean isLocked {get;set;} 

    public JSON2Apex(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'user') {
                        user = parser.getIntegerValue();
                    } else if (text == 'id') {
                        id = parser.getIntegerValue();
                    } else if (text == 'date') {
                        date = parser.getText();
                    } else if (text == 'time') {
                        time = parser.getIntegerValue();
                    } else if (text == 'task') {
                        task = new Task(parser);
                    } else if (text == 'history') {
                        history = arrayOfHistory(parser);
                    } else if (text == 'isLocked') {
                        isLocked = parser.getBooleanValue();
                    } else {
                        System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class Time {
        public Integer total {get;set;} 
       // public Users users {get;set;} 

        public Time(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'total') {
                            total = parser.getIntegerValue();
                        }/* else if (text == 'users') {
                            users = new Users(parser);
                        }*//* else {
                            System.debug(LoggingLevel.WARN, 'Time consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Labels {

        public Labels(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        {
                            System.debug(LoggingLevel.WARN, 'Labels consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Users {
        public Integer 51515 {get;set;} 

        public Users(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == '51515') {
                            51515 = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Users consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }*/
    
  /*  public class History {
        public Integer createdBy {get;set;} 
        public Integer id {get;set;} 
        public Integer time {get;set;} 
        public Integer previousTime {get;set;} 
        public String action {get;set;} 
        public String createdAt {get;set;} 

        public History(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'createdBy') {
                            createdBy = parser.getIntegerValue();
                        } else if (text == 'id') {
                            id = parser.getIntegerValue();
                        } else if (text == 'time') {
                            time = parser.getIntegerValue();
                        } else if (text == 'previousTime') {
                            previousTime = parser.getIntegerValue();
                        } else if (text == 'action') {
                            action = parser.getText();
                        } else if (text == 'createdAt') {
                            createdAt = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'History consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    
    public static List<JSON2Apex> parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return arrayOfJSON2Apex(parser);
    }
    
    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT || 
                curr == System.JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == System.JSONToken.END_OBJECT ||
                curr == System.JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }
    



    private static List<History> arrayOfHistory(System.JSONParser p) {
        List<History> res = new List<History>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new History(p));
        }
        return res;
    }


    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }





    private static List<JSON2Apex> arrayOfJSON2Apex(System.JSONParser p) {
        List<JSON2Apex> res = new List<JSON2Apex>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new JSON2Apex(p));
        }
        return res;
    }





    private static List<Labels> arrayOfLabels(System.JSONParser p) {
        List<Labels> res = new List<Labels>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Labels(p));
        }
        return res;
    }*/



}